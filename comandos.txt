temporal -> contrasena

###########################################################################
# COMANDOS DOCKER:								    
###########################################################################

OPCION -d en server7

docker run -d --gpus all --ipc=host --privileged --rm -it -e "CUDA_VISIBLE_DEVICES=0,1" -e "CUDA_DEVICE_ORDER=PCI_BUS_ID" -v /home/pablo.garcia.fernandez/FSOD:/fsod -v /home/pablo.garcia.fernandez/FewX_4:/FewX_4  --name=detectron2_test4 detectron2:v0

nvidia-docker run --privileged --rm -it -e "CUDA_VISIBLE_DEVICES=0,1" -e "CUDA_DEVICE_ORDER=PCI_BUS_ID" -v /home/pablo.garcia.fernandez/FSOD:/fsod -v /home/pablo.garcia.fernandez/FewX:/FewX  --name=detectron2_test detectron2:v0

docker logs container
docker attach container

###########################################################################
# INSIDE:								    
###########################################################################
python -m detectron2.utils.collect_env
git clone https://github.com/fanq15/FewX
pip install pandas
pip install scikit-image
sudo apt-get install nano

CUDA_VISIBLE_DEVICES=1 python3 fsod_train_net.py --num-gpus 1 --config-file configs/fsod/R_50_C4_1x.yaml 2>&1 | tee log/fsod_train_log.txt

CUDA_VISIBLE_DEVICES=1 python3 fsod_train_net.py --num-gpus 1 --config-file configs/fsod/R_50_C4_1x.yaml --eval-only MODEL.WEIGHTS ./output/fsod/R_50_C4_1x/model_final.pth 2>&1 | tee log/fsod_test_log.txt

###########################################################################
# SERVIDORES:								    
###########################################################################
ctgpgpu2.inv.usc.es - 172.16.242.92:22
ctgpgpu3.inv.usc.es - 172.16.242.93:22
ctgpgpu4.inv.usc.es - 172.16.242.201:22
ctgpgpu5.inv.usc.es - 172.16.242.202:22
ctgpgpu6.inv.usc.es - 172.16.242.205:22
ctgpgpu7.inv.usc.es - 172.16.242.207:22
ctgpgpu8.inv.usc.es - 172.16.242.208:22

###########################################################################
# Tabla 3: NOMBRES								    
###########################################################################
<d162811cd70e><detectron2_test>  | FewX -> 2-way, 5 shot
<a4571de714b7><detectron2_test2> | FewX_2 -> 2-way, 1 shot
<ccb730fc5ac0><detectron2_test3> | FewX_3 -> 5-way, 5 shot
<33ac3cacf1df><detectron2_test4> | FewX_4 -> 1-way, 1 shot

###########################################################################
# MODIFICACION PARA DATASET FSOD								    
###########################################################################
1) Preparacion dataset:
	FSOD/
	   │
	   └─ annotations/
	   │	  └─ instances_train2017.json
	   │	  └─ instances_val2017.json
	   └─ images/
	   │	  └─ part1
	   │	  └─ part2
	   └─ support/
	   └─ support_test/
	   └─ train_support_df.pkl
	   └─ test_support_df.pkl
	   └─ 3_gen_support_pool.py
	   └─ 3_gen_support_pool_test.py

*****) Preprocesamiento: 
-El support se construye a partir del script 3_gen_support_pool{_test}.py (versión modificada de FewX sin filtrado y cambiando rutas)
- Además, para la generación del soporte de test, es necesario indicar en el script anterior el .json creado a partir del script propio generar_n-shot support features. 

2) Modificación de FewX.
	a) Registrar nuevo dataset: fewx/data/datasets/builtin.py -> cambiar los splits, anotaciones {} y nombre dataset
	b) Modificar /fewx/data/mapper.py -> cambiar .pkl al soporte previamente creado. Nombre de coco a fsod. Cuidado metadata
	c) Adaptar fichero de configuración /configs (el base). Cambiar nombre dataset registrados +  parametros entrenamiento
	d) fewx/modeling/fsod/fsod_rcnn.py -> cambiar directorios de soporte CUIDADO CON WAY ASSERT 2

3) Nota: para la evaluacion borrar carpeta suport_dir en el propio FewX

RuntimeError: CUDA out of memory. Tried to allocate 7.48 GiB (GPU 0; 31.75 GiB total capacity; 24.60 GiB already allocated; 4.22 GiB free; 26.31 GiB reserved in total by PyTorch) 

Pruebas clases:
	- 100 clases, 30107MiB
	-


